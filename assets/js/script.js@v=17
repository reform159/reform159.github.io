"use strict";

function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
}

function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

function _iterableToArrayLimit(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;
    try {
        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally {
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally {
            if (_d) throw _e;
        }
    }
    return _arr;
}

function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
}

$(function () {
    /* Выбор сервера */

    var buyBlock = $('#buyBlock');
    buyBlock.find('.closeBtn').click(function () {
        buyBlock.parent().removeClass('active');
        $('.phpmc_donate').attr('style', 'display:none !important');
    });
    $('#listServers .server:not(.preparing)').click(function () {
        var id = $(this).data('id');
        var v = $(this).find('.rhomb').text();
        buyBlock.find('h1 .v').text(v);
        //buyBlock.find('.inputServer').val(id);
        $('.phpmc_donate').attr('style', 'display:none !important');
        $('#donate-' + id).show();
        //$('#login-' + id).focus();
        console.log("focus");
        buyBlock.parent().addClass('active');
    });
    /* Мобильный скролл */

    if (window.matchMedia('(max-width: 768px)').matches) {
        $('#listServers .server:not(.preparing)').click(function () {
            $("html, body").animate({
                scrollTop: $('.block.servers').offset().top - 10 + "px"
            }); //$(e.target).attr('href')
        });
    }
    copyText('.pageServer .server');
});

function copyText(className) {
    var clipboardTimer = false;
    new ClipboardJS(className).on('success', function (e) {
        if (clipboardTimer) clearTimeout(clipboardTimer);
        var c = e.trigger.classList;

        if (c) {
            e.trigger.classList.remove("copied");
            setTimeout(function () {
                e.trigger.classList.add("copied");
            }, 1);
        }

        e.clearSelection();
        clipboardTimer = setTimeout(function () {
            e.trigger.classList.remove("copied");
        }, 5000);
    });
}

function setOnlines(arr) {
    $('.block.monitoring').each(function (ii, el) {
        $(el).find('.server').each(function (i, el) {
            var _arr$i = _slicedToArray(arr[i], 2),
                cur = _arr$i[0],
                max = _arr$i[1];

            var percent = cur * 100 / max;
            var v = percent / 100 * 360;
            if (v >= 360) v = 359.999;
            $(el).find('.img svg path.val').attr('d', indicator(75, 75, 70, 0, v));
            $(el).find('.online span').text("".concat(cur, " \u0438\u0437 ").concat(max));
        });
    });
}

function polarToCartesian(cx, cy, radius, deg) {
    var rad = deg * Math.PI / 180;
    return {
        x: cx + radius * Math.cos(rad),
        y: cy + radius * Math.sin(rad)
    };
}

function indicator(x, y, radius, angleStart, angleEnd) {
    var start = polarToCartesian(x, y, radius, -angleEnd),
        end = polarToCartesian(x, y, radius, angleStart),
        largeArc = angleEnd - angleStart <= 180 ? 0 : 1;
    return ['M', start.x, start.y, 'A', radius, radius, 0, largeArc, 1, end.x, end.y].join(' ');
}